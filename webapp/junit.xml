<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="220" failures="1" time="110.46">
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:52:25" time="42.453" tests="5">
    <testcase classname="Component Tests LoginComponent should authenticate the user upon login when previous state was set" name="Component Tests LoginComponent should authenticate the user upon login when previous state was set" time="0.132">
    </testcase>
    <testcase classname="Component Tests LoginComponent should authenticate the user upon login when previous state was not set" name="Component Tests LoginComponent should authenticate the user upon login when previous state was not set" time="0.034">
    </testcase>
    <testcase classname="Component Tests LoginComponent should empty the credentials upon cancel" name="Component Tests LoginComponent should empty the credentials upon cancel" time="0.033">
    </testcase>
    <testcase classname="Component Tests LoginComponent should redirect user when register" name="Component Tests LoginComponent should redirect user when register" time="0.025">
    </testcase>
    <testcase classname="Component Tests LoginComponent should redirect user when request password" name="Component Tests LoginComponent should redirect user when request password" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:52:25" time="43.059" tests="12">
    <testcase classname="Component Tests JhiHealthCheckComponent baseName and subSystemName should return the basename when it has no sub system" name="Component Tests JhiHealthCheckComponent baseName and subSystemName should return the basename when it has no sub system" time="0.108">
    </testcase>
    <testcase classname="Component Tests JhiHealthCheckComponent baseName and subSystemName should return the basename when it has sub systems" name="Component Tests JhiHealthCheckComponent baseName and subSystemName should return the basename when it has sub systems" time="0.037">
    </testcase>
    <testcase classname="Component Tests JhiHealthCheckComponent baseName and subSystemName should return the sub system name" name="Component Tests JhiHealthCheckComponent baseName and subSystemName should return the sub system name" time="0.018">
    </testcase>
    <testcase classname="Component Tests JhiHealthCheckComponent baseName and subSystemName should return the subsystem when it has multiple keys" name="Component Tests JhiHealthCheckComponent baseName and subSystemName should return the subsystem when it has multiple keys" time="0.03">
    </testcase>
    <testcase classname="Component Tests JhiHealthCheckComponent transformHealthData should flatten empty health data" name="Component Tests JhiHealthCheckComponent transformHealthData should flatten empty health data" time="0.085">
    </testcase>
    <testcase classname="Component Tests JhiHealthCheckComponent transformHealthData should flatten health data with no subsystems" name="Component Tests JhiHealthCheckComponent transformHealthData should flatten health data with no subsystems" time="0.069">
    </testcase>
    <testcase classname="Component Tests JhiHealthCheckComponent transformHealthData should flatten health data with subsystems at level 1, main system has no additional information" name="Component Tests JhiHealthCheckComponent transformHealthData should flatten health data with subsystems at level 1, main system has no additional information" time="0.036">
    </testcase>
    <testcase classname="Component Tests JhiHealthCheckComponent transformHealthData should flatten health data with subsystems at level 1, main system has additional information" name="Component Tests JhiHealthCheckComponent transformHealthData should flatten health data with subsystems at level 1, main system has additional information" time="0.028">
    </testcase>
    <testcase classname="Component Tests JhiHealthCheckComponent transformHealthData should flatten health data with subsystems at level 1, main system has additional error" name="Component Tests JhiHealthCheckComponent transformHealthData should flatten health data with subsystems at level 1, main system has additional error" time="0.018">
    </testcase>
    <testcase classname="Component Tests JhiHealthCheckComponent getBadgeClass should get badge class" name="Component Tests JhiHealthCheckComponent getBadgeClass should get badge class" time="0.035">
    </testcase>
    <testcase classname="Component Tests JhiHealthCheckComponent refresh should call refresh on init" name="Component Tests JhiHealthCheckComponent refresh should call refresh on init" time="0.028">
    </testcase>
    <testcase classname="Component Tests JhiHealthCheckComponent refresh should handle a 503 on refreshing health data" name="Component Tests JhiHealthCheckComponent refresh should handle a 503 on refreshing health data" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:07" time="2.148" tests="7">
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 0" name="Component Tests Alert Error Component Error Handling Should display an alert on status 0" time="0.06">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 404" name="Component Tests Alert Error Component Error Handling Should display an alert on status 404" time="0.04">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on generic error" name="Component Tests Alert Error Component Error Handling Should display an alert on generic error" time="0.028">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for generic error" name="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for generic error" time="0.036">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for generic error without message" name="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for generic error without message" time="0.026">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for invalid parameters" name="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for invalid parameters" time="0.026">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for error headers" name="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for error headers" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:08" time="2.361" tests="5">
    <testcase classname="Service Tests Employee Service Service methods should find an element" name="Service Tests Employee Service Service methods should find an element" time="0.055">
    </testcase>
    <testcase classname="Service Tests Employee Service Service methods should create a Employee" name="Service Tests Employee Service Service methods should create a Employee" time="0.082">
    </testcase>
    <testcase classname="Service Tests Employee Service Service methods should update a Employee" name="Service Tests Employee Service Service methods should update a Employee" time="0.02">
    </testcase>
    <testcase classname="Service Tests Employee Service Service methods should return a list of Employee" name="Service Tests Employee Service Service methods should return a list of Employee" time="0.023">
    </testcase>
    <testcase classname="Service Tests Employee Service Service methods should delete a Employee" name="Service Tests Employee Service Service methods should delete a Employee" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:10" time="1.429" tests="5">
    <testcase classname="Service Tests GeneratedLegalDocument Service Service methods should find an element" name="Service Tests GeneratedLegalDocument Service Service methods should find an element" time="0.03">
    </testcase>
    <testcase classname="Service Tests GeneratedLegalDocument Service Service methods should create a GeneratedLegalDocument" name="Service Tests GeneratedLegalDocument Service Service methods should create a GeneratedLegalDocument" time="0.057">
    </testcase>
    <testcase classname="Service Tests GeneratedLegalDocument Service Service methods should update a GeneratedLegalDocument" name="Service Tests GeneratedLegalDocument Service Service methods should update a GeneratedLegalDocument" time="0.021">
    </testcase>
    <testcase classname="Service Tests GeneratedLegalDocument Service Service methods should return a list of GeneratedLegalDocument" name="Service Tests GeneratedLegalDocument Service Service methods should return a list of GeneratedLegalDocument" time="0.017">
    </testcase>
    <testcase classname="Service Tests GeneratedLegalDocument Service Service methods should delete a GeneratedLegalDocument" name="Service Tests GeneratedLegalDocument Service Service methods should delete a GeneratedLegalDocument" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:11" time="1.074" tests="5">
    <testcase classname="Service Tests LegalDocument Service Service methods should find an element" name="Service Tests LegalDocument Service Service methods should find an element" time="0.021">
    </testcase>
    <testcase classname="Service Tests LegalDocument Service Service methods should create a LegalDocument" name="Service Tests LegalDocument Service Service methods should create a LegalDocument" time="0.016">
    </testcase>
    <testcase classname="Service Tests LegalDocument Service Service methods should update a LegalDocument" name="Service Tests LegalDocument Service Service methods should update a LegalDocument" time="0.018">
    </testcase>
    <testcase classname="Service Tests LegalDocument Service Service methods should return a list of LegalDocument" name="Service Tests LegalDocument Service Service methods should return a list of LegalDocument" time="0.013">
    </testcase>
    <testcase classname="Service Tests LegalDocument Service Service methods should delete a LegalDocument" name="Service Tests LegalDocument Service Service methods should delete a LegalDocument" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="1" skipped="0" timestamp="2019-10-30T08:53:10" time="1.749" tests="5">
    <testcase classname="Component Tests RegisterComponent should ensure the two passwords entered match" name="Component Tests RegisterComponent should ensure the two passwords entered match" time="0.059">
    </testcase>
    <testcase classname="Component Tests RegisterComponent should update success to OK after creating an account" name="Component Tests RegisterComponent should update success to OK after creating an account" time="0.157">
      <failure>Error: expect(spy).toHaveBeenCalledWith(...expected)

- Expected
+ Received

  Object {
    &quot;email&quot;: &quot;&quot;,
+   &quot;firstName&quot;: &quot;&quot;,
    &quot;langKey&quot;: &quot;en&quot;,
+   &quot;lastName&quot;: &quot;&quot;,
    &quot;login&quot;: &quot;&quot;,
    &quot;password&quot;: &quot;password&quot;,
  },

Number of calls: 1
    at testing_1.inject.testing_1.fakeAsync (D:\projects\paperlabs-webapp\webapp\src\test\javascript\spec\app\account\register\register.component.spec.ts:56:30)
    at D:\projects\paperlabs-webapp\webapp\node_modules\zone.js\dist\fake-async-test.js:793:22
    at TestBedViewEngine.execute (D:\projects\paperlabs-webapp\webapp\node_modules\@angular\core\bundles\core-testing.umd.js:3598:17)
    at D:\projects\paperlabs-webapp\webapp\node_modules\@angular\core\bundles\core-testing.umd.js:3831:24
    at ZoneDelegate.invoke (D:\projects\paperlabs-webapp\webapp\node_modules\zone.js\dist\zone.js:464:160)
    at ProxyZoneSpec.onInvoke (D:\projects\paperlabs-webapp\webapp\node_modules\zone.js\dist\proxy.js:148:35)
    at ZoneDelegate.invoke (D:\projects\paperlabs-webapp\webapp\node_modules\zone.js\dist\zone.js:464:48)
    at Zone.run (D:\projects\paperlabs-webapp\webapp\node_modules\zone.js\dist\zone.js:190:37)
    at Object.testBody.length (D:\projects\paperlabs-webapp\webapp\node_modules\jest-preset-angular\zone-patch\index.js:51:54)
    at Object.asyncJestTest (D:\projects\paperlabs-webapp\webapp\node_modules\jest-jasmine2\build\jasmineAsyncInstall.js:102:37)
    at resolve (D:\projects\paperlabs-webapp\webapp\node_modules\jest-jasmine2\build\queueRunner.js:43:12)
    at new Promise (&lt;anonymous&gt;)
    at mapper (D:\projects\paperlabs-webapp\webapp\node_modules\jest-jasmine2\build\queueRunner.js:26:19)
    at promise.then (D:\projects\paperlabs-webapp\webapp\node_modules\jest-jasmine2\build\queueRunner.js:73:41)</failure>
    </testcase>
    <testcase classname="Component Tests RegisterComponent should notify of user existence upon 400/login already in use" name="Component Tests RegisterComponent should notify of user existence upon 400/login already in use" time="0.035">
    </testcase>
    <testcase classname="Component Tests RegisterComponent should notify of email existence upon 400/email address already in use" name="Component Tests RegisterComponent should notify of email existence upon 400/email address already in use" time="0.039">
    </testcase>
    <testcase classname="Component Tests RegisterComponent should notify of generic error" name="Component Tests RegisterComponent should notify of generic error" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:12" time="1.369" tests="5">
    <testcase classname="Service Tests DowloadHistory Service Service methods should find an element" name="Service Tests DowloadHistory Service Service methods should find an element" time="0.04">
    </testcase>
    <testcase classname="Service Tests DowloadHistory Service Service methods should create a DowloadHistory" name="Service Tests DowloadHistory Service Service methods should create a DowloadHistory" time="0.034">
    </testcase>
    <testcase classname="Service Tests DowloadHistory Service Service methods should update a DowloadHistory" name="Service Tests DowloadHistory Service Service methods should update a DowloadHistory" time="0.016">
    </testcase>
    <testcase classname="Service Tests DowloadHistory Service Service methods should return a list of DowloadHistory" name="Service Tests DowloadHistory Service Service methods should return a list of DowloadHistory" time="0.019">
    </testcase>
    <testcase classname="Service Tests DowloadHistory Service Service methods should delete a DowloadHistory" name="Service Tests DowloadHistory Service Service methods should delete a DowloadHistory" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:12" time="2.044" tests="6">
    <testcase classname="Component Tests GeneratedLegalDocument Management Component Should call load all on init" name="Component Tests GeneratedLegalDocument Management Component Should call load all on init" time="0.056">
    </testcase>
    <testcase classname="Component Tests GeneratedLegalDocument Management Component should load a page" name="Component Tests GeneratedLegalDocument Management Component should load a page" time="0.043">
    </testcase>
    <testcase classname="Component Tests GeneratedLegalDocument Management Component should not load a page is the page is the same as the previous page" name="Component Tests GeneratedLegalDocument Management Component should not load a page is the page is the same as the previous page" time="0.032">
    </testcase>
    <testcase classname="Component Tests GeneratedLegalDocument Management Component should re-initialize the page" name="Component Tests GeneratedLegalDocument Management Component should re-initialize the page" time="0.045">
    </testcase>
    <testcase classname="Component Tests GeneratedLegalDocument Management Component should calculate the sort attribute for an id" name="Component Tests GeneratedLegalDocument Management Component should calculate the sort attribute for an id" time="0.032">
    </testcase>
    <testcase classname="Component Tests GeneratedLegalDocument Management Component should calculate the sort attribute for a non-id attribute" name="Component Tests GeneratedLegalDocument Management Component should calculate the sort attribute for a non-id attribute" time="0.042">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:14" time="1.883" tests="6">
    <testcase classname="Component Tests AuditsComponent today function  should set toDate to current date" name="Component Tests AuditsComponent today function  should set toDate to current date" time="0.119">
    </testcase>
    <testcase classname="Component Tests AuditsComponent previousMonth function  should set fromDate to current date" name="Component Tests AuditsComponent previousMonth function  should set fromDate to current date" time="0.085">
    </testcase>
    <testcase classname="Component Tests AuditsComponent By default, on init should set all default values correctly" name="Component Tests AuditsComponent By default, on init should set all default values correctly" time="0.176">
    </testcase>
    <testcase classname="Component Tests AuditsComponent OnInit Should call load all on init" name="Component Tests AuditsComponent OnInit Should call load all on init" time="0.045">
    </testcase>
    <testcase classname="Component Tests AuditsComponent Create sort object Should sort only by id asc" name="Component Tests AuditsComponent Create sort object Should sort only by id asc" time="0.038">
    </testcase>
    <testcase classname="Component Tests AuditsComponent Create sort object Should sort by timestamp asc then by id" name="Component Tests AuditsComponent Create sort object Should sort by timestamp asc then by id" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:14" time="1.939" tests="6">
    <testcase classname="Component Tests DescriptionSection Management Component Should call load all on init" name="Component Tests DescriptionSection Management Component Should call load all on init" time="0.077">
    </testcase>
    <testcase classname="Component Tests DescriptionSection Management Component should load a page" name="Component Tests DescriptionSection Management Component should load a page" time="0.039">
    </testcase>
    <testcase classname="Component Tests DescriptionSection Management Component should not load a page is the page is the same as the previous page" name="Component Tests DescriptionSection Management Component should not load a page is the page is the same as the previous page" time="0.033">
    </testcase>
    <testcase classname="Component Tests DescriptionSection Management Component should re-initialize the page" name="Component Tests DescriptionSection Management Component should re-initialize the page" time="0.058">
    </testcase>
    <testcase classname="Component Tests DescriptionSection Management Component should calculate the sort attribute for an id" name="Component Tests DescriptionSection Management Component should calculate the sort attribute for an id" time="0.042">
    </testcase>
    <testcase classname="Component Tests DescriptionSection Management Component should calculate the sort attribute for a non-id attribute" name="Component Tests DescriptionSection Management Component should calculate the sort attribute for a non-id attribute" time="0.042">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:16" time="1.208" tests="5">
    <testcase classname="Service Tests Order Service Service methods should find an element" name="Service Tests Order Service Service methods should find an element" time="0.033">
    </testcase>
    <testcase classname="Service Tests Order Service Service methods should create a Order" name="Service Tests Order Service Service methods should create a Order" time="0.021">
    </testcase>
    <testcase classname="Service Tests Order Service Service methods should update a Order" name="Service Tests Order Service Service methods should update a Order" time="0.014">
    </testcase>
    <testcase classname="Service Tests Order Service Service methods should return a list of Order" name="Service Tests Order Service Service methods should return a list of Order" time="0.012">
    </testcase>
    <testcase classname="Service Tests Order Service Service methods should delete a Order" name="Service Tests Order Service Service methods should delete a Order" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:16" time="1.801" tests="6">
    <testcase classname="Component Tests DowloadHistory Management Component Should call load all on init" name="Component Tests DowloadHistory Management Component Should call load all on init" time="0.077">
    </testcase>
    <testcase classname="Component Tests DowloadHistory Management Component should load a page" name="Component Tests DowloadHistory Management Component should load a page" time="0.04">
    </testcase>
    <testcase classname="Component Tests DowloadHistory Management Component should not load a page is the page is the same as the previous page" name="Component Tests DowloadHistory Management Component should not load a page is the page is the same as the previous page" time="0.049">
    </testcase>
    <testcase classname="Component Tests DowloadHistory Management Component should re-initialize the page" name="Component Tests DowloadHistory Management Component should re-initialize the page" time="0.08">
    </testcase>
    <testcase classname="Component Tests DowloadHistory Management Component should calculate the sort attribute for an id" name="Component Tests DowloadHistory Management Component should calculate the sort attribute for an id" time="0.028">
    </testcase>
    <testcase classname="Component Tests DowloadHistory Management Component should calculate the sort attribute for a non-id attribute" name="Component Tests DowloadHistory Management Component should calculate the sort attribute for a non-id attribute" time="0.042">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:17" time="1.889" tests="6">
    <testcase classname="Component Tests LegalDocument Management Component Should call load all on init" name="Component Tests LegalDocument Management Component Should call load all on init" time="0.06">
    </testcase>
    <testcase classname="Component Tests LegalDocument Management Component should load a page" name="Component Tests LegalDocument Management Component should load a page" time="0.058">
    </testcase>
    <testcase classname="Component Tests LegalDocument Management Component should not load a page is the page is the same as the previous page" name="Component Tests LegalDocument Management Component should not load a page is the page is the same as the previous page" time="0.051">
    </testcase>
    <testcase classname="Component Tests LegalDocument Management Component should re-initialize the page" name="Component Tests LegalDocument Management Component should re-initialize the page" time="0.048">
    </testcase>
    <testcase classname="Component Tests LegalDocument Management Component should calculate the sort attribute for an id" name="Component Tests LegalDocument Management Component should calculate the sort attribute for an id" time="0.052">
    </testcase>
    <testcase classname="Component Tests LegalDocument Management Component should calculate the sort attribute for a non-id attribute" name="Component Tests LegalDocument Management Component should calculate the sort attribute for a non-id attribute" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:18" time="1.623" tests="5">
    <testcase classname="Component Tests PasswordResetFinishComponent should define its initial state" name="Component Tests PasswordResetFinishComponent should define its initial state" time="0.037">
    </testcase>
    <testcase classname="Component Tests PasswordResetFinishComponent sets focus after the view has been initialized" name="Component Tests PasswordResetFinishComponent sets focus after the view has been initialized" time="0.035">
    </testcase>
    <testcase classname="Component Tests PasswordResetFinishComponent should ensure the two passwords entered match" name="Component Tests PasswordResetFinishComponent should ensure the two passwords entered match" time="0.023">
    </testcase>
    <testcase classname="Component Tests PasswordResetFinishComponent should update success to OK after resetting password" name="Component Tests PasswordResetFinishComponent should update success to OK after resetting password" time="0.027">
    </testcase>
    <testcase classname="Component Tests PasswordResetFinishComponent should notify of generic error" name="Component Tests PasswordResetFinishComponent should notify of generic error" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:19" time="1.517" tests="5">
    <testcase classname="Component Tests PasswordResetInitComponent should define its initial state" name="Component Tests PasswordResetInitComponent should define its initial state" time="0.037">
    </testcase>
    <testcase classname="Component Tests PasswordResetInitComponent sets focus after the view has been initialized" name="Component Tests PasswordResetInitComponent sets focus after the view has been initialized" time="0.031">
    </testcase>
    <testcase classname="Component Tests PasswordResetInitComponent notifies of success upon successful requestReset" name="Component Tests PasswordResetInitComponent notifies of success upon successful requestReset" time="0.021">
    </testcase>
    <testcase classname="Component Tests PasswordResetInitComponent notifies of unknown email upon email address not registered/400" name="Component Tests PasswordResetInitComponent notifies of unknown email upon email address not registered/400" time="0.02">
    </testcase>
    <testcase classname="Component Tests PasswordResetInitComponent notifies of error upon error response" name="Component Tests PasswordResetInitComponent notifies of error upon error response" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:20" time="1.115" tests="5">
    <testcase classname="Service Tests Company Service Service methods should find an element" name="Service Tests Company Service Service methods should find an element" time="0.021">
    </testcase>
    <testcase classname="Service Tests Company Service Service methods should create a Company" name="Service Tests Company Service Service methods should create a Company" time="0.015">
    </testcase>
    <testcase classname="Service Tests Company Service Service methods should update a Company" name="Service Tests Company Service Service methods should update a Company" time="0.016">
    </testcase>
    <testcase classname="Service Tests Company Service Service methods should return a list of Company" name="Service Tests Company Service Service methods should return a list of Company" time="0.017">
    </testcase>
    <testcase classname="Service Tests Company Service Service methods should delete a Company" name="Service Tests Company Service Service methods should delete a Company" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:20" time="1.756" tests="6">
    <testcase classname="Component Tests Category Management Component Should call load all on init" name="Component Tests Category Management Component Should call load all on init" time="0.056">
    </testcase>
    <testcase classname="Component Tests Category Management Component should load a page" name="Component Tests Category Management Component should load a page" time="0.052">
    </testcase>
    <testcase classname="Component Tests Category Management Component should not load a page is the page is the same as the previous page" name="Component Tests Category Management Component should not load a page is the page is the same as the previous page" time="0.07">
    </testcase>
    <testcase classname="Component Tests Category Management Component should re-initialize the page" name="Component Tests Category Management Component should re-initialize the page" time="0.038">
    </testcase>
    <testcase classname="Component Tests Category Management Component should calculate the sort attribute for an id" name="Component Tests Category Management Component should calculate the sort attribute for an id" time="0.029">
    </testcase>
    <testcase classname="Component Tests Category Management Component should calculate the sort attribute for a non-id attribute" name="Component Tests Category Management Component should calculate the sort attribute for a non-id attribute" time="0.054">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:22" time="1.238" tests="5">
    <testcase classname="Service Tests Lawyer Service Service methods should find an element" name="Service Tests Lawyer Service Service methods should find an element" time="0.028">
    </testcase>
    <testcase classname="Service Tests Lawyer Service Service methods should create a Lawyer" name="Service Tests Lawyer Service Service methods should create a Lawyer" time="0.019">
    </testcase>
    <testcase classname="Service Tests Lawyer Service Service methods should update a Lawyer" name="Service Tests Lawyer Service Service methods should update a Lawyer" time="0.017">
    </testcase>
    <testcase classname="Service Tests Lawyer Service Service methods should return a list of Lawyer" name="Service Tests Lawyer Service Service methods should return a list of Lawyer" time="0.018">
    </testcase>
    <testcase classname="Service Tests Lawyer Service Service methods should delete a Lawyer" name="Service Tests Lawyer Service Service methods should delete a Lawyer" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:22" time="1.888" tests="6">
    <testcase classname="Component Tests Lawyer Management Component Should call load all on init" name="Component Tests Lawyer Management Component Should call load all on init" time="0.071">
    </testcase>
    <testcase classname="Component Tests Lawyer Management Component should load a page" name="Component Tests Lawyer Management Component should load a page" time="0.062">
    </testcase>
    <testcase classname="Component Tests Lawyer Management Component should not load a page is the page is the same as the previous page" name="Component Tests Lawyer Management Component should not load a page is the page is the same as the previous page" time="0.055">
    </testcase>
    <testcase classname="Component Tests Lawyer Management Component should re-initialize the page" name="Component Tests Lawyer Management Component should re-initialize the page" time="0.055">
    </testcase>
    <testcase classname="Component Tests Lawyer Management Component should calculate the sort attribute for an id" name="Component Tests Lawyer Management Component should calculate the sort attribute for an id" time="0.033">
    </testcase>
    <testcase classname="Component Tests Lawyer Management Component should calculate the sort attribute for a non-id attribute" name="Component Tests Lawyer Management Component should calculate the sort attribute for a non-id attribute" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:23" time="1.688" tests="6">
    <testcase classname="Component Tests Order Management Component Should call load all on init" name="Component Tests Order Management Component Should call load all on init" time="0.066">
    </testcase>
    <testcase classname="Component Tests Order Management Component should load a page" name="Component Tests Order Management Component should load a page" time="0.061">
    </testcase>
    <testcase classname="Component Tests Order Management Component should not load a page is the page is the same as the previous page" name="Component Tests Order Management Component should not load a page is the page is the same as the previous page" time="0.05">
    </testcase>
    <testcase classname="Component Tests Order Management Component should re-initialize the page" name="Component Tests Order Management Component should re-initialize the page" time="0.056">
    </testcase>
    <testcase classname="Component Tests Order Management Component should calculate the sort attribute for an id" name="Component Tests Order Management Component should calculate the sort attribute for an id" time="0.044">
    </testcase>
    <testcase classname="Component Tests Order Management Component should calculate the sort attribute for a non-id attribute" name="Component Tests Order Management Component should calculate the sort attribute for a non-id attribute" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:23" time="1.591" tests="8">
    <testcase classname="Service Tests Account Service Service methods should call /account if user is undefined" name="Service Tests Account Service Service methods should call /account if user is undefined" time="0.039">
    </testcase>
    <testcase classname="Service Tests Account Service Service methods should call /account only once" name="Service Tests Account Service Service methods should call /account only once" time="0.041">
    </testcase>
    <testcase classname="Service Tests Account Service Service methods hasAuthority should return false if user is not logged" name="Service Tests Account Service Service methods hasAuthority should return false if user is not logged" time="0.023">
    </testcase>
    <testcase classname="Service Tests Account Service Service methods hasAuthority should return false if user is logged and has not authority" name="Service Tests Account Service Service methods hasAuthority should return false if user is logged and has not authority" time="0.071">
    </testcase>
    <testcase classname="Service Tests Account Service Service methods hasAuthority should return true if user is logged and has authority" name="Service Tests Account Service Service methods hasAuthority should return true if user is logged and has authority" time="0.033">
    </testcase>
    <testcase classname="Service Tests Account Service Service methods hasAnyAuthority should return false if user is not logged" name="Service Tests Account Service Service methods hasAnyAuthority should return false if user is not logged" time="0.022">
    </testcase>
    <testcase classname="Service Tests Account Service Service methods hasAnyAuthority should return false if user is logged and has not authority" name="Service Tests Account Service Service methods hasAnyAuthority should return false if user is logged and has not authority" time="0.037">
    </testcase>
    <testcase classname="Service Tests Account Service Service methods hasAnyAuthority should return true if user is logged and has authority" name="Service Tests Account Service Service methods hasAnyAuthority should return true if user is logged and has authority" time="0.089">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:25" time="1.065" tests="5">
    <testcase classname="Service Tests Category Service Service methods should find an element" name="Service Tests Category Service Service methods should find an element" time="0.019">
    </testcase>
    <testcase classname="Service Tests Category Service Service methods should create a Category" name="Service Tests Category Service Service methods should create a Category" time="0.018">
    </testcase>
    <testcase classname="Service Tests Category Service Service methods should update a Category" name="Service Tests Category Service Service methods should update a Category" time="0.016">
    </testcase>
    <testcase classname="Service Tests Category Service Service methods should return a list of Category" name="Service Tests Category Service Service methods should return a list of Category" time="0.014">
    </testcase>
    <testcase classname="Service Tests Category Service Service methods should delete a Category" name="Service Tests Category Service Service methods should delete a Category" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:25" time="1.344" tests="5">
    <testcase classname="Service Tests DescriptionSection Service Service methods should find an element" name="Service Tests DescriptionSection Service Service methods should find an element" time="0.019">
    </testcase>
    <testcase classname="Service Tests DescriptionSection Service Service methods should create a DescriptionSection" name="Service Tests DescriptionSection Service Service methods should create a DescriptionSection" time="0.033">
    </testcase>
    <testcase classname="Service Tests DescriptionSection Service Service methods should update a DescriptionSection" name="Service Tests DescriptionSection Service Service methods should update a DescriptionSection" time="0.013">
    </testcase>
    <testcase classname="Service Tests DescriptionSection Service Service methods should return a list of DescriptionSection" name="Service Tests DescriptionSection Service Service methods should return a list of DescriptionSection" time="0.023">
    </testcase>
    <testcase classname="Service Tests DescriptionSection Service Service methods should delete a DescriptionSection" name="Service Tests DescriptionSection Service Service methods should delete a DescriptionSection" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:26" time="1.551" tests="4">
    <testcase classname="Component Tests PasswordComponent should show error if passwords do not match" name="Component Tests PasswordComponent should show error if passwords do not match" time="0.051">
    </testcase>
    <testcase classname="Component Tests PasswordComponent should call Auth.changePassword when passwords match" name="Component Tests PasswordComponent should call Auth.changePassword when passwords match" time="0.027">
    </testcase>
    <testcase classname="Component Tests PasswordComponent should set success to OK upon success" name="Component Tests PasswordComponent should set success to OK upon success" time="0.03">
    </testcase>
    <testcase classname="Component Tests PasswordComponent should notify of error if change password fails" name="Component Tests PasswordComponent should notify of error if change password fails" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:26" time="1.95" tests="3">
    <testcase classname="Component Tests User Management Update Component OnInit Should load authorities and language on init" name="Component Tests User Management Update Component OnInit Should load authorities and language on init" time="0.036">
    </testcase>
    <testcase classname="Component Tests User Management Update Component save Should call update service on save for existing user" name="Component Tests User Management Update Component save Should call update service on save for existing user" time="0.035">
    </testcase>
    <testcase classname="Component Tests User Management Update Component save Should call create service on save for new user" name="Component Tests User Management Update Component save Should call create service on save for new user" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:28" time="1.313" tests="3">
    <testcase classname="Component Tests LogsComponent OnInit should set all default values correctly" name="Component Tests LogsComponent OnInit should set all default values correctly" time="0.031">
    </testcase>
    <testcase classname="Component Tests LogsComponent OnInit Should call load all on init" name="Component Tests LogsComponent OnInit Should call load all on init" time="0.019">
    </testcase>
    <testcase classname="Component Tests LogsComponent change log level should change log level correctly" name="Component Tests LogsComponent change log level should change log level correctly" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:28" time="1.404" tests="2">
    <testcase classname="Component Tests User Management Component OnInit Should call load all on init" name="Component Tests User Management Component OnInit Should call load all on init" time="0.036">
    </testcase>
    <testcase classname="Component Tests User Management Component setActive Should update user and call load all" name="Component Tests User Management Component setActive Should update user and call load all" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:29" time="1.304" tests="3">
    <testcase classname="Component Tests SettingsComponent should send the current identity upon save" name="Component Tests SettingsComponent should send the current identity upon save" time="0.046">
    </testcase>
    <testcase classname="Component Tests SettingsComponent should notify of success upon successful save" name="Component Tests SettingsComponent should notify of success upon successful save" time="0.043">
    </testcase>
    <testcase classname="Component Tests SettingsComponent should notify of error upon failed save" name="Component Tests SettingsComponent should notify of error upon failed save" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:30" time="1.373" tests="2">
    <testcase classname="Component Tests GeneratedLegalDocument Management Update Component save Should call update service on save for existing entity" name="Component Tests GeneratedLegalDocument Management Update Component save Should call update service on save for existing entity" time="0.063">
    </testcase>
    <testcase classname="Component Tests GeneratedLegalDocument Management Update Component save Should call create service on save for new entity" name="Component Tests GeneratedLegalDocument Management Update Component save Should call create service on save for new entity" time="0.049">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:31" time="1.269" tests="2">
    <testcase classname="Component Tests DescriptionSection Management Update Component save Should call update service on save for existing entity" name="Component Tests DescriptionSection Management Update Component save Should call update service on save for existing entity" time="0.061">
    </testcase>
    <testcase classname="Component Tests DescriptionSection Management Update Component save Should call create service on save for new entity" name="Component Tests DescriptionSection Management Update Component save Should call create service on save for new entity" time="0.042">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:31" time="1.275" tests="3">
    <testcase classname="Component Tests JhiConfigurationComponent OnInit should set all default values correctly" name="Component Tests JhiConfigurationComponent OnInit should set all default values correctly" time="0.04">
    </testcase>
    <testcase classname="Component Tests JhiConfigurationComponent OnInit Should call load all on init" name="Component Tests JhiConfigurationComponent OnInit Should call load all on init" time="0.027">
    </testcase>
    <testcase classname="Component Tests JhiConfigurationComponent keys method should return the keys of an Object" name="Component Tests JhiConfigurationComponent keys method should return the keys of an Object" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:32" time="1.316" tests="2">
    <testcase classname="Component Tests DowloadHistory Management Update Component save Should call update service on save for existing entity" name="Component Tests DowloadHistory Management Update Component save Should call update service on save for existing entity" time="0.091">
    </testcase>
    <testcase classname="Component Tests DowloadHistory Management Update Component save Should call create service on save for new entity" name="Component Tests DowloadHistory Management Update Component save Should call create service on save for new entity" time="0.065">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:32" time="1.432" tests="2">
    <testcase classname="Component Tests LegalDocument Management Update Component save Should call update service on save for existing entity" name="Component Tests LegalDocument Management Update Component save Should call update service on save for existing entity" time="0.089">
    </testcase>
    <testcase classname="Component Tests LegalDocument Management Update Component save Should call create service on save for new entity" name="Component Tests LegalDocument Management Update Component save Should call create service on save for new entity" time="0.068">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:33" time="1.121" tests="4">
    <testcase classname="Service Tests User Service Service methods should call correct URL" name="Service Tests User Service Service methods should call correct URL" time="0.018">
    </testcase>
    <testcase classname="Service Tests User Service Service methods should return User" name="Service Tests User Service Service methods should return User" time="0.014">
    </testcase>
    <testcase classname="Service Tests User Service Service methods should return Authorities" name="Service Tests User Service Service methods should return Authorities" time="0.014">
    </testcase>
    <testcase classname="Service Tests User Service Service methods should propagate not found response" name="Service Tests User Service Service methods should propagate not found response" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:34" time="0.935" tests="3">
    <testcase classname="Service Tests Logs Service Service methods should call correct URL" name="Service Tests Logs Service Service methods should call correct URL" time="0.019">
    </testcase>
    <testcase classname="Service Tests Logs Service Service methods should get the config" name="Service Tests Logs Service Service methods should get the config" time="0.025">
    </testcase>
    <testcase classname="Service Tests Logs Service Service methods should get the env" name="Service Tests Logs Service Service methods should get the env" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:34" time="1.226" tests="2">
    <testcase classname="Component Tests Category Management Update Component save Should call update service on save for existing entity" name="Component Tests Category Management Update Component save Should call update service on save for existing entity" time="0.055">
    </testcase>
    <testcase classname="Component Tests Category Management Update Component save Should call create service on save for new entity" name="Component Tests Category Management Update Component save Should call create service on save for new entity" time="0.052">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:35" time="1.297" tests="3">
    <testcase classname="Component Tests ActivateComponent calls activate.get with the key from params" name="Component Tests ActivateComponent calls activate.get with the key from params" time="0.041">
    </testcase>
    <testcase classname="Component Tests ActivateComponent should set set success to OK upon successful activation" name="Component Tests ActivateComponent should set set success to OK upon successful activation" time="0.038">
    </testcase>
    <testcase classname="Component Tests ActivateComponent should set set error to ERROR upon activation failure" name="Component Tests ActivateComponent should set set error to ERROR upon activation failure" time="0.046">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:36" time="1.674" tests="2">
    <testcase classname="Component Tests Lawyer Management Update Component save Should call update service on save for existing entity" name="Component Tests Lawyer Management Update Component save Should call update service on save for existing entity" time="0.194">
    </testcase>
    <testcase classname="Component Tests Lawyer Management Update Component save Should call create service on save for new entity" name="Component Tests Lawyer Management Update Component save Should call create service on save for new entity" time="0.276">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:36" time="1.561" tests="2">
    <testcase classname="Component Tests Order Management Update Component save Should call update service on save for existing entity" name="Component Tests Order Management Update Component save Should call update service on save for existing entity" time="0.055">
    </testcase>
    <testcase classname="Component Tests Order Management Update Component save Should call create service on save for new entity" name="Component Tests Order Management Update Component save Should call create service on save for new entity" time="0.054">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:38" time="1.528" tests="2">
    <testcase classname="Component Tests Employee Management Update Component save Should call update service on save for existing entity" name="Component Tests Employee Management Update Component save Should call update service on save for existing entity" time="0.058">
    </testcase>
    <testcase classname="Component Tests Employee Management Update Component save Should call create service on save for new entity" name="Component Tests Employee Management Update Component save Should call create service on save for new entity" time="0.04">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:38" time="1.365" tests="1">
    <testcase classname="Component Tests GeneratedLegalDocument Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests GeneratedLegalDocument Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.058">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:39" time="1.482" tests="2">
    <testcase classname="Component Tests Company Management Update Component save Should call update service on save for existing entity" name="Component Tests Company Management Update Component save Should call update service on save for existing entity" time="0.092">
    </testcase>
    <testcase classname="Component Tests Company Management Update Component save Should call create service on save for new entity" name="Component Tests Company Management Update Component save Should call create service on save for new entity" time="0.039">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:39" time="1.332" tests="1">
    <testcase classname="Component Tests DescriptionSection Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests DescriptionSection Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.063">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:41" time="1.298" tests="3">
    <testcase classname="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should initialize with default values" name="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should initialize with default values" time="0.034">
    </testcase>
    <testcase classname="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should increase strength upon password value change" name="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should increase strength upon password value change" time="0.041">
    </testcase>
    <testcase classname="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should change the color based on strength" name="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should change the color based on strength" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:41" time="1.657" tests="1">
    <testcase classname="Component Tests DowloadHistory Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests DowloadHistory Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.053">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:42" time="1.26" tests="1">
    <testcase classname="Component Tests LegalDocument Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests LegalDocument Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.059">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:42" time="1.195" tests="1">
    <testcase classname="Component Tests User Management Detail Component OnInit Should call load all on init" name="Component Tests User Management Detail Component OnInit Should call load all on init" time="0.049">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:43" time="0.961" tests="3">
    <testcase classname="Service Tests Audits Service Service methods should call correct URL" name="Service Tests Audits Service Service methods should call correct URL" time="0.038">
    </testcase>
    <testcase classname="Service Tests Audits Service Service methods should return Audits" name="Service Tests Audits Service Service methods should return Audits" time="0.018">
    </testcase>
    <testcase classname="Service Tests Audits Service Service methods should propagate not found response" name="Service Tests Audits Service Service methods should propagate not found response" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:44" time="1.154" tests="1">
    <testcase classname="Component Tests User Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests User Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.042">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:44" time="1.211" tests="1">
    <testcase classname="Component Tests Category Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Category Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.056">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:45" time="1.274" tests="1">
    <testcase classname="Component Tests Lawyer Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Lawyer Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.056">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:46" time="1.227" tests="1">
    <testcase classname="Component Tests Order Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Order Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.047">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:46" time="1.283" tests="1">
    <testcase classname="Component Tests Employee Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Employee Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.069">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:47" time="1.269" tests="1">
    <testcase classname="Component Tests Company Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Company Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.054">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:48" time="0.948" tests="3">
    <testcase classname="Service Tests Logs Service Service methods should call correct URL" name="Service Tests Logs Service Service methods should call correct URL" time="0.019">
    </testcase>
    <testcase classname="Service Tests Logs Service Service methods should return Metrics" name="Service Tests Logs Service Service methods should return Metrics" time="0.018">
    </testcase>
    <testcase classname="Service Tests Logs Service Service methods should return Thread Dump" name="Service Tests Logs Service Service methods should return Thread Dump" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:48" time="1.159" tests="1">
    <testcase classname="Component Tests JhiMetricsMonitoringComponent refresh should call refresh on init" name="Component Tests JhiMetricsMonitoringComponent refresh should call refresh on init" time="0.035">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:49" time="1.247" tests="1">
    <testcase classname="Component Tests Employee Management Component Should call load all on init" name="Component Tests Employee Management Component Should call load all on init" time="0.055">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:49" time="1.201" tests="1">
    <testcase classname="Component Tests GeneratedLegalDocument Management Detail Component OnInit Should call load all on init" name="Component Tests GeneratedLegalDocument Management Detail Component OnInit Should call load all on init" time="0.059">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:50" time="1.26" tests="1">
    <testcase classname="Component Tests Company Management Component Should call load all on init" name="Component Tests Company Management Component Should call load all on init" time="0.051">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:51" time="1.594" tests="1">
    <testcase classname="Component Tests DescriptionSection Management Detail Component OnInit Should call load all on init" name="Component Tests DescriptionSection Management Detail Component OnInit Should call load all on init" time="0.052">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:51" time="1.427" tests="1">
    <testcase classname="Component Tests DowloadHistory Management Detail Component OnInit Should call load all on init" name="Component Tests DowloadHistory Management Detail Component OnInit Should call load all on init" time="0.062">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:52" time="1.254" tests="1">
    <testcase classname="Component Tests LegalDocument Management Detail Component OnInit Should call load all on init" name="Component Tests LegalDocument Management Detail Component OnInit Should call load all on init" time="0.052">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:53" time="0.877" tests="2">
    <testcase classname="Service Tests Logs Service Service methods should call correct URL" name="Service Tests Logs Service Service methods should call correct URL" time="0.019">
    </testcase>
    <testcase classname="Service Tests Logs Service Service methods should change log level" name="Service Tests Logs Service Service methods should change log level" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:54" time="1.165" tests="1">
    <testcase classname="Component Tests Category Management Detail Component OnInit Should call load all on init" name="Component Tests Category Management Detail Component OnInit Should call load all on init" time="0.063">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:54" time="1.141" tests="1">
    <testcase classname="Component Tests Lawyer Management Detail Component OnInit Should call load all on init" name="Component Tests Lawyer Management Detail Component OnInit Should call load all on init" time="0.059">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:55" time="1.367" tests="1">
    <testcase classname="Component Tests Employee Management Detail Component OnInit Should call load all on init" name="Component Tests Employee Management Detail Component OnInit Should call load all on init" time="0.054">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:55" time="1.512" tests="1">
    <testcase classname="Component Tests Order Management Detail Component OnInit Should call load all on init" name="Component Tests Order Management Detail Component OnInit Should call load all on init" time="0.06">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-30T08:53:56" time="0.966" tests="1">
    <testcase classname="Component Tests Company Management Detail Component OnInit Should call load all on init" name="Component Tests Company Management Detail Component OnInit Should call load all on init" time="0.046">
    </testcase>
  </testsuite>
</testsuites>